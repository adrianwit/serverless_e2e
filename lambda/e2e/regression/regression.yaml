pipeline:
  set_sdk:
    action: sdk.set
    target: $target
    sdk: go:1.12

  test:
    tag: $pathMatch
    description: '@info'
    subPath: 'cases/${index}_*'
    range: 1..008
    template:
      setVars:
        action: nop
        comments: use case init
        skip: $HasResource(${path}/skip.txt)

      conifg:
        action: nop
        when: $HasResource(${path}/config.json)
        ':init':
          configText: $Cat('${path}/config.json')
          config: $AsMap(${configText})

      setup:
        when: $HasResource(${path}/setup.yaml)
        action: run
        comments: setup use case resources
        request: '@setup'

      deploy:
        action: run
        comments: deploy lambda function
        request: '@deploy'

      run-trigger:
        action: run
        comments: fire lambda function trigger
        request: '@trigger'
        sleepTimeMs: 500

      validate:
        when: $HasResource(${path}/test.yaml)
        action: run
        comments: validate lambda function execution
        request: '@test'

      ubdeploy:
        when: $HasResource(${path}/undeploy.yaml)
        action: run
        comments: undeploy lambda function
        request: '@undeploy'

    post-test-sleep:
      action: nop
      sleepTimeMs: 1000
      comments: sleep for extra debuging
